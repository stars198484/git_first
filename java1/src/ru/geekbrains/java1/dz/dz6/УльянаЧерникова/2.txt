В Java символьная строка представляет собой последовательность символов, но в отличие от других языков
программирования, где символьные строки представлены последовательностью символов, в Java они являются
объектами класса String.
В результате создания объекта типа String получается неизменяемая символьная строка, т.е. невозможно
изменить символы имеющейся строки. При любом изменении строки создается новый объект типа String,
содержащий все изменения. Если требуются изменяемые строки, могут быть использованы классы:
StringBuilder и StringBuffer.
Конструкторы символьных строк
Класс String поддерживает несколько конструкторов. Для создания пустого объекта типа String вызывается
стандартный конструктор.
String s = new String() ;
Зачастую символьные строки требуется создавать с начальными значениями. Для этой цели в классе String
предоставляются разнообразные конструкторы.
String(char symbols[]);
char sym[] = (‘h’, ‘e’, ‘l’, ‘l’, ‘o’) ;
String s = new String(sym) ;
Можно создать объект типа String, содержащий ту же последовательность символов, что и другой объект типа
String:
String(String obj);
где параметр obj - объект типа String.
Например:
class StringDemo {
public static void main(String args[])
char[] с = { 'J' , 'а' , 'v' , 'а' };
String sl = new String(c) ;
String s2 = new String(sl) ;
System.out.println(sl) ;
System.out.println(s2) ;
Вывод в консоль:
Java
Java
End of the file 2.txt
