Несмотря на то что в примитивном типе char языка Java для представления основного набора символов в
Юникоде используется 16 бит, в типичном формате символьных строк, пересылаемых через Интернет,
используются массивы 8-разрядных байтов, создаваемых из набора символов в коде ASCII. Чаще всего
употребляются 8·разрядные строки в коде ASCII, и поэтому в классе String предоставляются конструкторы,
инициализирующие символьную строку массивом типа byte.
String(bуtе sym[]);
Здесь параметр символы обозначает массив байтов. Преобразование байтов в символы выполняется в
соответствии с кодировкой, выбираемой на конкретной платформе по умолчанию. Применение этих
конструкторов демонстрируется в следующем примере программы:
class StringDemo {
public static void main (String args[]) {
byte ascii[] = { 65, 66, 67, 68, 69, 70 } ;
String s = new String(ascii) ;
System.out.println(s) ;
} }
© geekbrains.ru 3
Вывод в консоль:
ABCDEF
Имеются также расширенные версии конструкторов, где байты преобразуются в символьные строки и можно
указать кодировку символов, определяющую порядок преобразования байтов в символы. Но, как правило,
требуется кодировка, выбираемая на конкретной платформе по умолчанию.
Объект типа String можно создать из объекта типа StringBuffer или StringBuilder:
String(StringВuffer obj);
String(StringBuilder obj);
Для создания строк, вместо использования конструкторов можно использовать следующую запись:
String str = “Text”;
