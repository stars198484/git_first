package ru.geekbrains.java1.dz.dz1.АндрейС;

/**
 * Created by I_V_Zhukov on 10.05.2016.
 */
public class Main {
    public static void main(String[] args) {
        byte bt = 1;
        short sh = 2;
        int in = 4;
        long lg = 8;
        float fl = 4.48f;
        double db = 3.14;
        char ch = 'c';
        boolean bl = true;

        System.out.println (m1 (1.157, 2, 3, 45));
        System.out.println(m2 (5, 13));
        //System.out.println(m3(2016));

    }

    //не понимаю почему выводится значение 2,314 когда на калькуляторе получается более длинное значение и при этом оно больше 2,391133333
    public static double m1 (double a, int b, int c, int d) {

        double mv = 0;
       /* a = 1;
        b = 2;
        c = 3;
        d = 4;
        */
        mv = a * (b + c / d);
        return mv;

    }

    public static boolean m2 (int b, int c){

        int s;
        s = b + c;
        if (s >= 10 && s <=20){
            boolean m2 = true;//!
            return true;
        }
        boolean m2 = false;//!
        return m2;
    }

    /*
    по 3-му методу не знаю как реализовать. первый вариант который пришёл в голову - проверка на целое число путём деления текущего года на
    числа. Если число целое то год високосный (исключая когда получается целое число при делении на 100. Но как сделать условие при котором
    идёт проверка к какому типу данных принадлежит получившееся число не знаю.
    вторым решение было сделать цикл, но не знаю как сделать так чтобы цикл выполнялся. т.е. исходное значение 0 к нему прибавляем 4 до тех
    пор пока не получится значение равное текущему году и если это значение совпадает то год високосный.

    Подсмотрел как реализовал это Александр на странице с уроком. Почитал что такое "Деление по модулю" (я не математик, по этому не знаю).
    Принцип как у него это работает понял, но не стал использовать.)
    public static boolean m3 (int g){
        int v = 0;
        int a = 4;
        int b = 100;
        int c = 400;
        for (v + a; v = g){
            return true;

        }
        return false;
    }
    */


}